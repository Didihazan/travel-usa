'use strict';

var expect = require('chai').expect;

describe('warm:', function () {

  var Warm = require('../index');

  it('simple load module with warmer', function (done) {
    new Warm('./test/fixtures/module-promise').parallel(done);
  });

  it('load module with callbacks and options', function (done) {
    var config = {
      expect: 'callback',
      strict: false,
      path: '../warm/test/fixtures'
    };
    new Warm(config, 'module-callback').parallel().then(done).catch(done);
  });

  it('test callback error', function (done) {
    new Warm('./test/fixtures/module-callback-error', {expect: 'callback'}).parallel(function (err) {
      expect(err).to.be.a.instanceof(Error);
      done();
    });
  });

  it('load already existing module', function (done) {
    new Warm(require('../test/fixtures/module-promise')).parallel(done);
  });

  it('load success and load reject over array', function (done) {
    new Warm(['./test/fixtures/module-promise', './test/fixtures/module-promise-error']).parallel(function (err) {
      expect(err).to.be.a.instanceof(Error);
      done();
    });
  });

  it('try to load module without warm', function (done) {
      new Warm('./test/fixtures/module').parallel(function (err) {
        expect(err).to.be.a.instanceof(Error);
        done();
      });
  });

  it('try to load module without warm and catch rejection', function (done) {
      new Warm('./test/fixtures/module').parallel().then(function() {
        done(new Error('error expected'));
      }).catch(function (err) {
        expect(err).to.be.a.instanceof(Error);
        done();
      });
  });

  it('try to load module without warm and strict disabled', function (done) {
      new Warm({strict: false}, './test/fixtures/module').parallel(done);
  });

  it('.series is not supported', function () {
      expect(function () { new Warm({strict: false}, './test/fixtures/module').series(); }).to.throw();
  });

  it('load example modules (100% coverage)', function () {
    require('../test/fixtures/module-callback-error')();
    require('../test/fixtures/module-callback')();
    require('../test/fixtures/module-promise-error')();
    require('../test/fixtures/module-promise')();
    require('../test/fixtures/module')();
  });

});
